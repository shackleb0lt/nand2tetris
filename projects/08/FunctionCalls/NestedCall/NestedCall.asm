//code for function Sys.init 0
(Sys.init)
//pushing 0 k times
//code for push constant 4000
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for pop pointer 0
@3
D=A
@0
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for push constant 5000
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for pop pointer 1
@3
D=A
@1
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for call Sys.main 0
//push return address
@CLBL_Sys.asm_0
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//push that
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-N-5
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
//go to function
@Sys.main 
0;JMP
//return address
(CLBL_Sys.asm_0)
//code for pop temp 1
@5
D=A
@1
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for label LOOP 
(LOOP)
//code for goto LOOP 
@LOOP
0;JMP
//code for function Sys.main 5
(Sys.main)
//pushing 0 k times
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for push constant 4001
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for pop pointer 0
@3
D=A
@0
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for push constant 5001
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for pop pointer 1
@3
D=A
@1
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for push constant 200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for pop local 1
@LCL
D=M
@1
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for push constant 40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for pop local 2
@LCL
D=M
@2
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for pop local 3
@LCL
D=M
@3
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for push constant 123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for call Sys.add12 1
//push return address
@CLBL_Sys.asm_1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push local
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//push argument
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//push this
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//push that
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//ARG=SP-N-5
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
//LCL=SP
@SP
D=M
@LCL
M=D
//go to function
@Sys.add12 
0;JMP
//return address
(CLBL_Sys.asm_1)
//code for pop temp 0
@5
D=A
@0
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for push local 0
@LCL
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//code for push local 1
@LCL
D=M
@1
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//code for push local 2
@LCL
D=M
@2
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//code for push local 3
@LCL
D=M
@3
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//code for push local 4
@LCL
D=M
@4
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//code for add  
@SP
A=M
A=A-1
D=M
A=A-1
M=M+D
@SP
M=M-1
//code for add  
@SP
A=M
A=A-1
D=M
A=A-1
M=M+D
@SP
M=M-1
//code for add  
@SP
A=M
A=A-1
D=M
A=A-1
M=M+D
@SP
M=M-1
//code for add  
@SP
A=M
A=A-1
D=M
A=A-1
M=M+D
@SP
M=M-1
//code for return  
@LCL
D=M
@R13
M=D
//RET= *FRAME-5
@5
A=D-A
D=M
@R14
M=D
//R14 has return address
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
//SP=ARG+1
@ARG
D=M
D=D+1
@SP
M=D
//THAT=*FRAME-1
@R13
M=M-1
A=M
D=M
@THAT
M=D
//THIS=*FRAME-2
@R13
M=M-1
A=M
D=M
@THIS
M=D
//ARG=*FRAME-3
@R13
M=M-1
A=M
D=M
@ARG
M=D
//LCL=*FRAME-4
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
//code for function Sys.add12 0
(Sys.add12)
//pushing 0 k times
//code for push constant 4002
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for pop pointer 0
@3
D=A
@0
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for push constant 5002
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for pop pointer 1
@3
D=A
@1
D=A+D
@R13
M=D
@SP
A=M
A=A-1
D=M
@R13
A=M
M=D
@SP
M=M-1
//code for push argument 0
@ARG
D=M
@0
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//code for push constant 12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//code for add  
@SP
A=M
A=A-1
D=M
A=A-1
M=M+D
@SP
M=M-1
//code for return  
@LCL
D=M
@R13
M=D
//RET= *FRAME-5
@5
A=D-A
D=M
@R14
M=D
//R14 has return address
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
//SP=ARG+1
@ARG
D=M
D=D+1
@SP
M=D
//THAT=*FRAME-1
@R13
M=M-1
A=M
D=M
@THAT
M=D
//THIS=*FRAME-2
@R13
M=M-1
A=M
D=M
@THIS
M=D
//ARG=*FRAME-3
@R13
M=M-1
A=M
D=M
@ARG
M=D
//LCL=*FRAME-4
@R13
M=M-1
A=M
D=M
@LCL
M=D
@R14
A=M
0;JMP
